@page "/recuperarLogin"
@inject IJSRuntime JSRuntime
@using System.Text.Json
<PageTitle>RecuperarLogin</PageTitle>

<section class="principalContainer principalContainerBigScreen principalContainerSmallScreen">
    <h1 class="h1 h1Small">Relembre seu Login</h1>
    <span class="descricaoTela">
        Recupere seu acesso antes de fazer o cálculo IMC
    </span>
    <br>
    <div class="inputSmallScreenContainer">
        <input id="email" class="input inputLogin inputTinyScreen" type="email" placeholder="UserName" @bind="Email"/>
    </div>
    <div>
        <input id="notRobot" type="checkbox" />
        <span>Não sou um robô.</span>
    </div>
    <div class="horizontalDivisor"></div>
    <button class="btn btnPrimary" @onclick="Checking">Recuperar Login</button>
    <button class="btn btnSecondary" onclick="window.location.href='/cadastro'">Não tenho um acesso</button>
    <button class="btn btnSecondary" onclick="window.location.href='/'">Voltar</button>
</section>

@code {
    private string Email { get; set; } = string.Empty;

    private async Task Checking()
    {
        
        if (await JSRuntime.InvokeAsync<bool>("checkingRecuperarLoginForms"))
        {
            var listaJson = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "cadastroDados");
            if (listaJson != null)
            {
                var listaDeserializada = JsonSerializer.Deserialize<List<string>>(listaJson) ?? [];
                var usrData = listaDeserializada.Find(e => e.Contains("Email:" + Email)) ?? string.Empty;
                await JSRuntime.InvokeVoidAsync("recuperarConta", usrData);
            }
        }
    }
}
