@page "/cadastro"
@inject IJSRuntime JSRuntime
@using System.Text.Json
<PageTitle>Cadastro</PageTitle>

<section class="principalContainer principalContainerBigScreen principalContainerSmallScreen">
    <h1 class="h1 h1Small">Crie sua conta</h1>
    <span class="descricaoTela">
        Você precisa criar uma conta
    </span>
    <br>
    <div class="inputSmallScreenContainer">
        <input id="name" class="input inputLogin inputTinyScreen" type="text" placeholder="Seu username" />
    </div>
    <div class="inputSmallScreenContainer">
        <input id="email" class="input inputLogin inputTinyScreen" type="email" placeholder="Seu melhor e-mail" />
    </div>
    <div class="inputSmallScreenContainer">
        <input id="senha" class="input inputLogin inputTinyScreen" type="password" placeholder="Crie uma senha" />
    </div>
    <div class="inputSmallScreenContainer">
        <input id="confirmaSenha" class="input inputLogin inputTinyScreen" type="password" placeholder="Confirme sua senha" />
    </div>
    <div>
        <input id="notRobot" type="checkbox" />
        <span>Não sou um robô.</span>
    </div>
    <div class="horizontalDivisor"></div>
    <button class="btn btnPrimary" @onclick="Checking">Criar Conta</button>
    <button class="btn btnSecondary" onclick="window.location.href='/'">Voltar</button>
</section>

@code {
    private async Task Checking()
    {
        if (await JSRuntime.InvokeAsync<bool>("checkingCadastroForms"))
        {
            var cadastroData = await JSRuntime.InvokeAsync<string>("cadastroDados");
            var lista = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "cadastroDados");
            var listaDeserializada = JsonSerializer.Deserialize<List<string>>(lista) ?? [];

            if (listaDeserializada == null)
            {
                listaDeserializada = new List<string>();
                SalvaCadastro(listaDeserializada, cadastroData);
            }
            else if (CanSalvarCadastro(listaDeserializada, cadastroData))
            {
                SalvaCadastro(listaDeserializada, cadastroData);
            }
            else
            {
                await JSRuntime.InvokeVoidAsync("falhaCadastro");
            }

        }
    }

    private async void SalvaCadastro(List<string> contaLista, string cadastroData)
    {
        contaLista.Add(cadastroData);
        string jsonLista = JsonSerializer.Serialize(contaLista);
        await JSRuntime.InvokeVoidAsync("localStorage.setItem", "cadastroDados", jsonLista);
        await JSRuntime.InvokeVoidAsync("finalizarCadastro");
    }

    private bool CanSalvarCadastro(List<string> contaLista, string cadastroData)
    {
        return  contaLista.Count > 0 && !contaLista.Contains(cadastroData)|| contaLista.Count == 0;
    }
}
